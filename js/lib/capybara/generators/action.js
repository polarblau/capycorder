// Generated by CoffeeScript 1.3.3
(function() {

  window.Capybara || (window.Capybara = {});

  Capybara.Generators || (Capybara.Generators = {});

  Capybara.Generators.Action = (function() {

    Action.prototype.templates = {
      attachFile: function(data) {
        return "attach_file('" + data.locator + "', '" + data.options.file + "')";
      },
      check: function(data) {
        return "check('" + data.locator + "')";
      },
      uncheck: function(data) {
        return "uncheck('" + data.locator + "')";
      },
      choose: function(data) {
        return "choose('" + data.locator + "')";
      },
      clickButton: function(data) {
        return "click_button('" + data.locator + "')";
      },
      fillIn: function(data) {
        return "fill_in('" + data.locator + "', :with => '" + data.options["with"] + "')";
      },
      select: function(data) {
        return "select('" + data.locator + "', :from => '" + data.options.from + "')";
      },
      clickLink: function(data) {
        return "click_link('" + data.locator + "')";
      },
      visitPath: function(data) {
        return "visit('" + data.options.path + "')";
      }
    };

    Action.prototype.scopeTemplate = function(locator) {
      return ["within('" + locator + "') do", "end"];
    };

    function Action(data) {
      if (data == null) {
        data = {};
      }
      this.data = data;
    }

    Action.prototype.isScoped = function() {
      return this.data.scope != null;
    };

    Action.prototype.scopeToPartials = function() {
      if (this.isScoped) {
        return this.scopeTemplate(this.data.scope);
      }
    };

    Action.prototype.toString = function() {
      return this.templates[this.data.name](this.data);
    };

    return Action;

  })();

}).call(this);
