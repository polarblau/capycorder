// Generated by CoffeeScript 1.3.3
(function() {

  describe('Capybara specs', function() {
    var ACTION_DATA_MOCK, MATCHER_DATA_MOCK, SCOPED_ACTION_DATA_MOCK, specs;
    specs = null;
    ACTION_DATA_MOCK = {
      type: 'action',
      name: 'clickLink',
      locator: 'foobar',
      scope: null,
      options: {}
    };
    MATCHER_DATA_MOCK = {
      type: 'matcher',
      name: 'shouldHaveSelector',
      selector: '#foo',
      scope: null,
      options: {}
    };
    SCOPED_ACTION_DATA_MOCK = _.extend({}, ACTION_DATA_MOCK, {
      scope: 'form-scope'
    });
    beforeEach(function() {
      return specs = new Capybara.Specs({
        tabURL: '/foo'
      });
    });
    describe('#add', function() {
      return it('should store the added generators', function() {
        var before;
        before = specs.generators.length;
        specs.add({
          type: 'action'
        });
        return expect(specs.generators.length).toBeGreaterThan(before);
      });
    });
    describe('#setName', function() {
      return it('should change the specs name', function() {
        specs.setName('foo');
        return expect(specs.name).toBe('foo');
      });
    });
    return describe('#generate', function() {
      it('should generate basic structure', function() {
        var expectedOutput;
        expectedOutput = "it 'SHOULDDOSOMETHING' do\n  visit('/foo')\nend";
        return expect(specs.generate()).toEqual(expectedOutput);
      });
      describe('actions', function() {
        it('should wrap action generator output', function() {
          var expectedOutput;
          specs.add(ACTION_DATA_MOCK);
          expectedOutput = "it 'SHOULDDOSOMETHING' do\n  visit('/foo')\n  click_link('foobar')\nend";
          return expect(specs.generate()).toEqual(expectedOutput);
        });
        return describe('with scope', function() {
          return it('should wrap the generator output', function() {
            var expectedOutput;
            specs.add(SCOPED_ACTION_DATA_MOCK);
            expectedOutput = "it 'SHOULDDOSOMETHING' do\n  visit('/foo')\n  within('form-scope') do\n    click_link('foobar')\n  end\nend";
            return expect(specs.generate()).toEqual(expectedOutput);
          });
        });
      });
      return describe('matchers', function() {
        return it('should wrap matcher generator output', function() {
          var expectedOutput;
          specs.add(MATCHER_DATA_MOCK);
          expectedOutput = "it 'SHOULDDOSOMETHING' do\n  visit('/foo')\n  page.should have_selector('#foo')\nend";
          return expect(specs.generate()).toEqual(expectedOutput);
        });
      });
    });
  });

}).call(this);
