// Generated by CoffeeScript 1.3.3
(function() {

  jasmine.getFixtures().fixturesPath = 'fixtures';

  describe('Capybara matchers recorder', function() {
    var callback, fakeWindow, recorder;
    recorder = null;
    callback = null;
    fakeWindow = null;
    beforeEach(function() {
      loadFixtures('capybara/recorders/matchers_spec.html');
      callback = jasmine.createSpy('afterCaptureCallback');
      recorder = new Capybara.Recorders.Matchers({
        afterCapture: callback
      });
      return recorder.start();
    });
    describe('#start', function() {
      it('should attach a callback with options for the document on mouseup', function() {
        $('#div').trigger('mouseup');
        return expect(callback).toHaveBeenCalledWith({
          type: 'matcher',
          name: 'shouldHaveSelector',
          selector: '#div',
          scope: null,
          options: {}
        });
      });
      return xit('should attach a callback with options (content) for the document on mouseup', function() {
        var node, range;
        range = document.createRange();
        node = $('#div').get(0);
        range.selectNodeContents(node);
        $('#div').trigger('mouseup');
        return expect(callback).toHaveBeenCalledWith({
          type: 'matcher',
          name: 'shouldHaveSelector',
          selector: 'html > body > div#jasmine-fixtures > div#div',
          scope: null,
          options: {
            content: 'Foobar'
          }
        });
      });
    });
    return describe('#stop', function() {
      beforeEach(function() {
        return recorder.stop();
      });
      return it('should detach the callback for the document on mouseup', function() {
        $('#div').trigger('mouseup');
        return expect(callback).not.toHaveBeenCalled();
      });
    });
  });

}).call(this);
