// Generated by CoffeeScript 1.3.3
(function() {

  describe('TabProcess', function() {
    var MOCK_OPTIONS, process;
    process = null;
    MOCK_OPTIONS = {
      tab: {
        id: 1
      },
      onStateChange: function() {}
    };
    beforeEach(function() {
      return process = new TabProcess(MOCK_OPTIONS);
    });
    describe('#setState', function() {
      return it('should set the state for the process', function() {
        process.setState('foo');
        return expect(process.state).toEqual('foo');
      });
    });
    describe('#getState', function() {
      return it('should return "off" by default', function() {
        return expect(process.state).toEqual('off');
      });
    });
    return describe('#toNextState', function() {
      it('should return "name" after first call', function() {
        process.toNextState();
        return expect(process.state).toEqual('name');
      });
      it('should return "capture.actions" after second call', function() {
        process.toNextState();
        process.toNextState();
        return expect(process.state).toEqual('capture.actions');
      });
      it('should return "capture.matchers" after third call', function() {
        process.toNextState();
        process.toNextState();
        process.toNextState();
        return expect(process.state).toEqual('capture.matchers');
      });
      it('should return "generate" after fourth call', function() {
        process.toNextState();
        process.toNextState();
        process.toNextState();
        process.toNextState();
        return expect(process.state).toEqual('generate');
      });
      return it('should return "off" again after fifth call', function() {
        process.toNextState();
        process.toNextState();
        process.toNextState();
        process.toNextState();
        process.toNextState();
        return expect(process.state).toEqual('off');
      });
    });
  });

}).call(this);
